<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.pentasys.ws.java4web</groupId>
		<artifactId>ws-java4web-web</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>ws-java4web-web-impl</artifactId>
	<name>Java4Web:: Web-IMPL</name>

	<packaging>war</packaging>

	<properties>
		<angular2.dir>angular2</angular2.dir>
	</properties>

	<dependencies>

		<!-- app dependencies -->
		<dependency>
			<groupId>com.pentasys.ws.java4web</groupId>
			<artifactId>ws-java4web-web-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.pentasys.ws.java4web</groupId>
			<artifactId>ws-java4web-business-impl</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tomcat-weaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.resthub</groupId>
			<artifactId>springmvc-router</artifactId>
		</dependency>

		<!-- ui -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts-taglib</artifactId>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<!-- logger -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- aop -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<!-- utils -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-jci-fam</artifactId>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

	</dependencies>

	<build>

		<finalName>${context.path}-${project.version}</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://${hostname}:${port}/manager/text</url>
					<server>${server}</server>
					<path>/${context.path}</path>
					<username>tomcat</username>
					<password>tomcat</password>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>schemagen</id>
						<goals>
							<goal>schemagen</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<transformSchemas>
						<transformSchema>
							<uri>http://xmldefs.pentasys.de/ws/javaframeworks/report</uri>
							<toPrefix>r</toPrefix>
							<toFile>report.xsd</toFile>
						</transformSchema>
						<transformSchema>
							<uri>http://xmldefs.pentasys.de/ws/javaframeworks/user</uri>
							<toPrefix>u</toPrefix>
							<toFile>user.xsd</toFile>
						</transformSchema>
					</transformSchemas>
					<includes>
						<include>de/pentasys/ws/javaframeworks/jaxb/**/*</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp</directory>
							<includes>
								<include>**/web.xml</include>
							</includes>
						</resource>
					</webResources>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>

			<!-- Plugin to execute command "npm install" and "npm run build" inside 
				/angular directory -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<workingDirectory>${angular2.dir}</workingDirectory>
					<installDirectory>temp</installDirectory>
				</configuration>
				<executions>
					<!-- It will install nodejs and npm -->
					<execution>
						<id>install node and npm</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v6.10.1</nodeVersion>
							<npmVersion>3.10.10</npmVersion>
						</configuration>
					</execution>

					<!-- It will execute command "npm install" inside "/angular" directory -->
					<execution>
						<id>npm install</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>

					<!-- It will execute command "npm build" inside "/angular" directory 
						to clean and create "/dist" directory -->
					<execution>
						<id>npm build</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-angular2-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${context.path}-${project.version}/views/angular2/</outputDirectory>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>${project.basedir}/${angular2.dir}/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-swagger-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${context.path}-${project.version}/views/swagger/</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>../web-api/swagger/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
